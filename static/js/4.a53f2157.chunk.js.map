{"version":3,"sources":["../node_modules/lodash/_baseSum.js","../node_modules/lodash/capitalize.js","components/AddressInputSelect/index.tsx","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/components/StatBox.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","views/Nft/market/hooks/useGetCollectionDistribution.tsx","../node_modules/lodash/upperFirst.js","../node_modules/lodash/_hasUnicode.js","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","../node_modules/lodash/sum.js","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx","../node_modules/lodash/_createCaseFirst.js","../node_modules/lodash/_castSlice.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_unicodeToArray.js"],"names":["module","exports","array","iteratee","result","index","length","current","undefined","toString","require","upperFirst","string","toLowerCase","ResultStatus","SubMenu","styled","div","theme","colors","input","inputSecondary","radii","default","isOpen","AddressLink","Text","initialState","isFetching","resultFound","NOT_VALID","value","defaultValidAddressHandler","Promise","resolve","AddressInputSelect","onValidAddress","onAddressClick","props","useState","state","setState","t","useTranslation","useEffect","isAddress","a","prevState","hasResults","FOUND","NOT_FOUND","validAddressHandler","position","placeholder","subject","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","onClick","px","fontWeight","MarketPageHeader","background","useTheme","isDark","StatBoxItem","title","stat","fontSize","color","textAlign","height","width","mx","StatBox","Flex","invertedContrast","cardBorder","card","AvatarImage","attrs","alt","src","borderColor","useGetCollectionDistributionPB","total","data","getNftsFromCollectionApi","pancakeBunniesAddress","apiResponse","tokenIds","Object","keys","attributesDistribution","totalCountCall","address","getPancakeRabbitsAddress","name","bunnyCountCalls","map","tokenId","params","bunnyContractCalls","concat","multicallv2","pancakeRabbitsAbi","response","tokenListResponse","slice","reduce","obj","tokenCount","toNumber","sum","values","entries","tokenData","fetchTokens","useGetCollectionDistribution","collectionAddress","getCollectionDistributionApi","createCaseFirst","reHasUnicode","RegExp","test","SearchBar","history","useHistory","push","nftsBaseUrl","MarketPageTitle","description","children","gridGap","alignItems","gridTemplateColumns","as","scale","mb","BaseSubMenu","SubMenuItems","baseSum","identity","StyledBannerImage","mediaQueries","sm","md","BannerHeader","bannerImage","bannerAlt","avatar","flexDirection","pb","BannerImage","bottom","left","BackLink","RouterLink","primary","TopBar","justifyContent","to","LowestPriceStatBoxItem","lowestPrice","setLowestPrice","getLowestPriceInCollection","lowestCollectionPrice","fetchLowestPrice","formattedLowestPrice","toLocaleString","minimumFractionDigits","maximumFractionDigits","symbol","Header","collection","useParams","totalSupply","numberTokensListed","totalVolumeBNB","banner","useLocation","pathname","hash","volume","parseFloat","itemsConfig","label","href","large","formatNumber","Number","Container","items","activeItem","mt","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","join","baseSlice","start","end","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match"],"mappings":"8GAuBAA,EAAOC,QAdP,SAAiBC,EAAOC,GAKtB,IAJA,IAAIC,EACAC,GAAS,EACTC,EAASJ,EAAMI,SAEVD,EAAQC,GAAQ,CACvB,IAAIC,EAAUJ,EAASD,EAAMG,SACbG,IAAZD,IACFH,OAAoBI,IAAXJ,EAAuBG,EAAWH,EAASG,GAGxD,OAAOH,I,qBCpBT,IAAIK,EAAWC,EAAQ,KACnBC,EAAaD,EAAQ,KAqBzBV,EAAOC,QAJP,SAAoBW,GAClB,OAAOD,EAAWF,EAASG,GAAQC,iB,yCCZhCC,E,0JAAAA,O,yBAAAA,I,iBAAAA,I,0BAAAA,M,KAWL,IAAMC,EAAUC,IAAOC,IAAV,wXAEG,qBAAGC,MAAkBC,OAAOC,SACtB,qBAAGF,MAAkBC,OAAOE,kBAC3B,qBAAGH,MAAkBI,MAAMC,WAAW,qBAAGL,MAAkBI,MAAMC,WAYpF,qBAAGC,QACG,yEAQJC,EAAcT,YAAOU,KAAPV,CAAH,mJAQXW,EAAe,CACnBC,YAAY,EACZC,YAAaf,EAAagB,UAC1BC,MAAO,IAGHC,EAA6B,kBAAMC,QAAQC,SAAQ,IA4E1CC,IA1E+C,SAAC,GAIxD,IAAD,IAHJC,sBAGI,MAHaJ,EAGb,EAFJK,EAEI,EAFJA,eACGC,EACC,iBACJ,EAA0BC,mBAASZ,GAAnC,mBAAOa,EAAP,KAAcC,EAAd,KACQC,EAAMC,cAAND,EACAd,EAAmCY,EAAnCZ,WAAYC,EAAuBW,EAAvBX,YAAaE,EAAUS,EAAVT,MAyCjC,OAzBAa,qBAAU,YACoC,IAArBC,YAAUd,GAER,uCAAG,4BAAAe,EAAA,sEAExBL,GAAS,SAACM,GAAD,mBAAC,eAAoBA,GAArB,IAAgCnB,YAAY,OAF7B,SAGCQ,EAAeL,GAHhB,OAGlBiB,EAHkB,OAKxBP,GAAS,SAACM,GAAD,mBAAC,eACLA,GADI,IAEPnB,YAAY,EACZC,YAAamB,EAAalC,EAAamC,MAAQnC,EAAaoC,eARtC,gDAWxBT,GAAS,SAACM,GAAD,mBAAC,eAAoBA,GAArB,IAAgCnB,YAAY,OAX7B,yDAAH,oDAgBvBuB,GAEAV,GAAS,SAACM,GAAD,mBAAC,eAAoBA,GAArB,IAAgClB,YAAaf,EAAagB,iBAEpE,CAACC,EAAOK,EAAgBK,IAGzB,eAAC,IAAD,yBAAKW,SAAS,YAAed,GAA7B,cACE,cAAC,KAAD,CACEe,YAAaX,EAAE,mBAAoB,CAAEY,QAASZ,EAAE,WAAW7B,gBAC3DkB,MAAOS,EAAMT,MACbwB,SA5Ce,SAACC,GACpB,IAAeC,EAAaD,EAAIE,OAAxB3B,MACRU,GAAS,SAACM,GAAD,mBAAC,eACLA,GADI,IAEPhB,MAAO0B,QAyCLE,MAAO,CAAEP,SAAU,WAAYQ,OAAQ,GAAIC,aAAc,UAE1DjC,GACC,cAAC,IAAD,CAAKwB,SAAS,WAAWU,IAAI,OAAOC,MAAM,OAAOJ,MAAO,CAAEC,OAAQ,IAAlE,SACE,cAAC,IAAD,MAGJ,cAAC7C,EAAD,CAASS,OAAQK,IAAgBf,EAAagB,UAA9C,SACGD,IAAgBf,EAAamC,MAC5B,cAACxB,EAAD,CAAauC,QA9CD,WAClBvB,EAASd,GACTU,EAAeG,EAAMT,QA4Cf,SAAoCS,EAAMT,QAE1C,cAAC,KAAD,CAAMkC,GAAG,OAAOC,WAAW,OAA3B,SACGxB,EAAE,+B,4ECjHAyB,IARqC,SAAC7B,GACnD,IACM8B,EADYC,cAAVnD,MACiBoD,OACrB,uDACA,uDACJ,OAAO,cAAC,IAAD,aAAYF,WAAYA,GAAgB9B,M,8ICApCiC,EAA0C,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAASnC,EAAnB,wBACrD,eAAC,IAAD,2BAASA,GAAT,cACE,cAAC,KAAD,CAAMoC,SAAS,OAAOC,MAAM,aAAaC,UAAU,SAAnD,SACGJ,IAEO,OAATC,EACC,cAAC,KAAD,CAAUI,OAAO,OAAOC,MAAM,MAAMC,GAAG,SAEvC,cAAC,KAAD,CAAMb,WAAW,MAAMU,UAAU,SAAjC,SACGH,SAMHO,EAAUhE,YAAOiE,KAAPjE,CAAH,4LAEG,qBAAGE,MAAkBC,OAAO+D,oBACtB,qBAAGhE,MAAkBC,OAAOgE,cAC/B,qBAAGjE,MAAkBI,MAAM8D,QAM/BJ,O,8CC1BTK,E,KAAcrE,EAAOC,IAAIqE,OAAwB,kBAAc,CACnEC,IADqD,EAAGA,OAAtCvE,CAAH,yQAGI,qBAAGwE,OAOR,qBAAGC,aAAiC,aAOrCJ,O,wLCcFK,EAAiC,WAC5C,MAA0BnD,mBAAkB,CAAEX,YAAY,EAAO+D,MAAO,EAAGC,KAAM,OAAjF,mBAAOpD,EAAP,KAAcC,EAAd,KAqDA,OAnDAG,qBAAU,YACS,uCAAG,4CAAAE,EAAA,6DAClBL,GAAS,SAACM,GAAD,mBAAC,eAAoBA,GAArB,IAAgCnB,YAAY,OADnC,kBAIIiE,YAAyBC,KAJ7B,OAIhBC,EAJgB,8DAMhBtD,GAAS,SAACM,GAAD,mBAAC,eAAoBA,GAArB,IAAgCnB,YAAY,OANrC,kCAUZoE,EAAWC,OAAOC,KAAKH,EAAYI,wBACnCC,EAAiB,CACrBC,QAASC,cACTC,KAAM,eAEFC,EAAkBR,EAASS,KAAI,SAACC,GAAD,MAAc,CACjDL,QAASC,cACTC,KAAM,aACNI,OAAQ,CAACD,OAELE,EAAqB,CAACR,GAAgBS,OAAOL,GApBjC,oBAsBOM,YAAYC,EAAmBH,GAtBtC,QAsBVI,EAtBU,OAuBVC,EAAoBD,EAASE,MAAM,GAAGC,QAAO,SAACC,EAAKC,EAAYhH,GACnE,OAAO,2BACF+G,GADL,kBAEGpB,EAAS3F,GAFZ,2BAE0B0F,EAAYH,KAAKvF,IAF3C,IAEmDgH,WAAYA,EAAW,GAAGC,iBAE5E,IACH7E,EAAS,CACPb,YAAY,EACZ+D,MAAOqB,EAAS,GAAG,GAAGM,WACtB1B,KAAMqB,IAhCQ,mDAoCVtB,EAAQ4B,IAAItB,OAAOuB,OAAOzB,EAAYI,yBACtCc,EAAoBhB,OAAOwB,QAAQ1B,EAAYH,MAAMuB,QAAO,SAACC,EAAD,GAAgC,IAAD,mBAAxBV,EAAwB,KAAfgB,EAAe,KAC/F,OAAO,2BACFN,GADL,kBAEGV,EAFH,2BAEkBgB,GAFlB,IAE6BL,WAAYtB,EAAYI,uBAAuBO,SAE3E,IACHjE,EAAS,CAAEb,YAAY,EAAO+D,QAAOC,KAAMqB,IA3C3B,iEAAH,qDA+CjBU,KACC,IAEInF,GAGMoF,IAlFsB,SAACC,GACpC,MAA0BtF,mBAAgB,CAAEX,YAAY,EAAOgE,KAAM,OAArE,mBAAOpD,EAAP,KAAcC,EAAd,KAeA,OAbAG,qBAAU,YACS,uCAAG,4BAAAE,EAAA,6DAClBL,GAAS,SAACM,GAAD,mBAAC,eAAoBA,GAArB,IAAgCnB,YAAY,OADnC,SAEQkG,YAAwDD,GAFhE,OAEZ9B,EAFY,OAGlBtD,EAAS,CACPb,YAAY,EACZgE,KAAMG,EAAYH,OALF,2CAAH,qDASjB+B,KACC,CAACE,EAAmBpF,IAEhBD,I,oBC9BT,IAmBI7B,EAnBkBD,EAAQ,IAmBbqH,CAAgB,eAEjC/H,EAAOC,QAAUU,G,kBCpBjB,IAWIqH,EAAeC,OAAO,uFAa1BjI,EAAOC,QAJP,SAAoBW,GAClB,OAAOoH,EAAaE,KAAKtH,K,oFCPZuH,IAVa,SAAC7F,GAC3B,IAAM8F,EAAUC,cAMhB,OAAO,cAAC,IAAD,aAAoBhG,eAJA,SAACN,GAC1BqG,EAAQE,KAAR,UAAgBC,IAAhB,oBAAuCxG,MAG0BO,M,8GCQtDkG,IAZyC,SAAC,GAAD,IAAGhE,EAAH,EAAGA,MAAOiE,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,SAAapG,EAApC,wBACtD,eAAC,KAAD,yBAAMqG,QAAQ,OAAOC,WAAW,SAASC,oBAAqB,CAAC,MAAO,KAAM,KAAM,KAAM,mBAAuBvG,GAA/G,cACE,eAAC,IAAD,WACE,cAAC,KAAD,CAASwG,GAAG,KAAKC,MAAM,KAAKpE,MAAM,YAAYqE,GAAG,OAAjD,SACGxE,IAEFiE,KAEH,cAAC,IAAD,UAAMC,U,4DCbJO,EAAcjI,YAAOkI,KAAPlI,CAAH,+FAEM,qBAAGE,MAAkBC,OAAOgE,cAGpC8D,O,oBCRf,IAAIE,EAAUzI,EAAQ,MAClB0I,EAAW1I,EAAQ,KAsBvBV,EAAOC,QANP,SAAaC,GACX,OAAQA,GAASA,EAAMI,OACnB6I,EAAQjJ,EAAOkJ,GACf,I,2ECSSC,E,KAtBWrI,EAAOC,IAAIqE,OAA8B,kBAAc,CAC/EC,IADiE,EAAGA,OAA5CvE,CAAH,kTAGnB,gBAAGwE,EAAH,EAAGA,IAAKtE,EAAR,EAAQA,MAAR,OAAqBsE,EAAG,iCAA6BA,EAA7B,kCAA4DtE,EAAMC,OAAOgE,eAC1E,qBAAGK,OAS1B,qBAAGtE,MAAkBoI,aAAaC,MAIlC,qBAAGrI,MAAkBoI,aAAaE,M,yDCEvBC,IAhBmC,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,YAAaC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,OAAQlB,EAAyB,EAAzBA,SAAapG,EAAY,iBAC5G,OACE,cAAC,KAAD,yBAAMuH,cAAc,SAASb,GAAG,QAAW1G,GAA3C,aACE,eAAC,IAAD,CAAKc,SAAS,WAAW0G,GAAG,OAA5B,UACE,cAACC,EAAD,CAAavE,IAAKkE,EAAanE,IAAKoE,IACpC,cAAC,IAAD,CAAKvG,SAAS,WAAW4G,OAAQ,EAAGC,MAAO,EAA3C,SACE,eAAC,KAAD,CAAMrB,WAAW,WAAjB,UACGgB,EACAlB,e,4LCVPwB,EAAWlJ,YAAOmJ,IAAPnJ,CAAH,iHAEH,qBAAGE,MAAkBC,OAAOiJ,WAqBxBC,EAhBU,WACvB,IAAQ3H,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,CAAMkG,WAAW,SAAS0B,eAAe,gBAAgBtB,GAAG,OAA5D,UACE,eAACkB,EAAD,CAAUK,GAAE,UAAKhC,IAAL,gBAAZ,UACE,cAAC,IAAD,CAAiB5D,MAAM,UAAUG,MAAM,SACtCpC,EAAE,sBAEL,cAAC,IAAD,UACE,cAACyF,EAAA,EAAD,U,8ECQOqC,EAxBuD,SAAC,GAAqC,IAAnC3C,EAAkC,EAAlCA,kBAAsBvF,EAAY,iBACzG,EAAsCC,mBAAiB,MAAvD,mBAAOkI,EAAP,KAAoBC,EAApB,KACQhI,EAAMC,cAAND,EAERE,qBAAU,YACc,uCAAG,4BAAAE,EAAA,sEACa6H,YAA2B9C,GADxC,OACjB+C,EADiB,OAEvBF,EAAeE,GAFQ,2CAAH,qDAKtBC,KACC,CAAChD,EAAmB6C,IAEvB,IAAMI,EACY,OAAhBL,EACI,KACAA,EAAYM,oBAAevK,EAAW,CACpCwK,sBAAuB,EACvBC,sBAAuB,IAG/B,OAAO,cAACjG,EAAA,EAAD,aAAaR,MAAO9B,EAAE,oBAAqB,CAAEwI,OAAQ,QAAUzG,KAAMqG,GAA0BxI,KC8CzF6I,IAvDuB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC/BvD,EAAsBwD,cAAtBxD,kBACAyD,EAAoEF,EAApEE,YAAaC,EAAuDH,EAAvDG,mBAAoBC,EAAmCJ,EAAnCI,eAAgBC,EAAmBL,EAAnBK,OAAQ7B,EAAWwB,EAAXxB,OACzDlH,EAAMC,cAAND,EACR,EAA2BgJ,cAAnBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAEZC,EAASL,EACXM,WAAWN,GAAgBT,oBAAevK,EAAW,CACnDwK,sBAAuB,EACvBC,sBAAuB,IAEzB,IAEEc,EAAc,CAClB,CACEC,MAAOtJ,EAAE,SACTuJ,KAAK,GAAD,OAAK1D,IAAL,wBAAgCV,EAAhC,WAEN,CACEmE,MAAOtJ,EAAE,UACTuJ,KAAK,GAAD,OAAK1D,IAAL,wBAAgCV,EAAhC,YAEN,CACEmE,MAAOtJ,EAAE,YACTuJ,KAAK,GAAD,OAAK1D,IAAL,wBAAgCV,EAAhC,eAIR,OACE,qCACE,eAAC1D,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAACsF,EAAA,EAAD,CAAcC,YAAa+B,EAAOS,MAAOtC,OAAQ,cAACvE,EAAA,EAAD,CAAaG,IAAKoE,MACnE,cAACpB,EAAA,EAAD,CACEhE,MAAO4G,EAAW7E,KAClBkC,YAAa2C,EAAW3C,YAAc,cAAC,KAAD,CAAM9D,MAAM,aAAZ,SAA0BjC,EAAE0I,EAAW3C,eAAuB,KAFtG,SAIE,eAACzD,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CAAaR,MAAO9B,EAAE,SAAU+B,KAAM0H,YAAaC,OAAOd,GAAc,EAAG,KAC3E,cAACtG,EAAA,EAAD,CACER,MAAO9B,EAAE,gBACT+B,KAAM8G,EAAqBY,YAAaC,OAAOb,GAAqB,EAAG,GAAK,MAE9E,cAAC,EAAD,CAAwB1D,kBAAmBuD,EAAW/E,UACtD,cAACrB,EAAA,EAAD,CAAaR,MAAO9B,EAAE,kBAAmB,CAAEwI,OAAQ,QAAUzG,KAAMoH,YAIzE,cAACQ,EAAA,EAAD,UACE,cAACpD,EAAA,EAAD,CAAaqD,MAAOP,EAAaQ,WAAU,UAAKZ,GAAL,OAAgBC,GAAQ,UAAYY,GAAG,OAAOxD,GAAG,e,oBCtEpG,IAAIyD,EAAY/L,EAAQ,KACpBgM,EAAahM,EAAQ,KACrBiM,EAAgBjM,EAAQ,KACxBD,EAAWC,EAAQ,KA6BvBV,EAAOC,QApBP,SAAyB2M,GACvB,OAAO,SAAShM,GACdA,EAASH,EAASG,GAElB,IAAIiM,EAAaH,EAAW9L,GACxB+L,EAAc/L,QACdJ,EAEAsM,EAAMD,EACNA,EAAW,GACXjM,EAAOmM,OAAO,GAEdC,EAAWH,EACXJ,EAAUI,EAAY,GAAGI,KAAK,IAC9BrM,EAAOsG,MAAM,GAEjB,OAAO4F,EAAIF,KAAgBI,K,oBC5B/B,IAAIE,EAAYxM,EAAQ,KAiBxBV,EAAOC,QANP,SAAmBC,EAAOiN,EAAOC,GAC/B,IAAI9M,EAASJ,EAAMI,OAEnB,OADA8M,OAAc5M,IAAR4M,EAAoB9M,EAAS8M,GAC1BD,GAASC,GAAO9M,EAAUJ,EAAQgN,EAAUhN,EAAOiN,EAAOC,K,kBCgBrEpN,EAAOC,QArBP,SAAmBC,EAAOiN,EAAOC,GAC/B,IAAI/M,GAAS,EACTC,EAASJ,EAAMI,OAEf6M,EAAQ,IACVA,GAASA,EAAQ7M,EAAS,EAAKA,EAAS6M,IAE1CC,EAAMA,EAAM9M,EAASA,EAAS8M,GACpB,IACRA,GAAO9M,GAETA,EAAS6M,EAAQC,EAAM,EAAMA,EAAMD,IAAW,EAC9CA,KAAW,EAGX,IADA,IAAI/M,EAASiN,MAAM/M,KACVD,EAAQC,GACfF,EAAOC,GAASH,EAAMG,EAAQ8M,GAEhC,OAAO/M,I,oBC3BT,IAAIkN,EAAe5M,EAAQ,KACvBgM,EAAahM,EAAQ,KACrB6M,EAAiB7M,EAAQ,KAe7BV,EAAOC,QANP,SAAuBW,GACrB,OAAO8L,EAAW9L,GACd2M,EAAe3M,GACf0M,EAAa1M,K,kBCHnBZ,EAAOC,QAJP,SAAsBW,GACpB,OAAOA,EAAO4M,MAAM,M,kBCPtB,IAQIC,EAAW,oBACXC,EAAU,kDACVC,EAAS,2BAETC,EAAc,qBACdC,EAAa,kCACbC,EAAa,qCAIbC,EAPa,MAAQL,EAAU,IAAMC,EAAS,IAOtB,IACxBK,EAAW,oBAEXC,EAAQD,EAAWD,GADP,gBAAwB,CAACH,EAAaC,EAAYC,GAAYb,KAAK,KAAO,IAAMe,EAAWD,EAAW,MAElHG,EAAW,MAAQ,CAACN,EAAcF,EAAU,IAAKA,EAASG,EAAYC,EAAYL,GAAUR,KAAK,KAAO,IAGxGkB,EAAYlG,OAAO0F,EAAS,MAAQA,EAAS,KAAOO,EAAWD,EAAO,KAa1EjO,EAAOC,QAJP,SAAwBW,GACtB,OAAOA,EAAOwN,MAAMD,IAAc","file":"static/js/4.a53f2157.chunk.js","sourcesContent":["/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","import React, { ChangeEvent, useState, useEffect } from 'react'\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport CircleLoader from 'components/Loader/CircleLoader'\n\nenum ResultStatus {\n  NOT_VALID,\n  FOUND,\n  NOT_FOUND,\n}\n\ninterface AddressInputSelectProps extends BoxProps {\n  onValidAddress?: (value: string) => Promise<boolean>\n  onAddressClick: (value: string) => void\n}\n\nconst SubMenu = styled.div<{ isOpen: boolean }>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\n  left: 0;\n  padding-bottom: 8px;\n  padding-top: 16px;\n  position: absolute;\n  top: calc(100% - 12px);\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  width: 100%;\n  z-index: 15;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    `\n    height: auto;\n    opacity: 1;\n    transform: scaleY(1);\n  `}\n`\n\nconst AddressLink = styled(Text)`\n  cursor: pointer;\n  overflow-wrap: break-word;\n  font-weight: bold;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nconst initialState = {\n  isFetching: false,\n  resultFound: ResultStatus.NOT_VALID,\n  value: '',\n}\n\nconst defaultValidAddressHandler = () => Promise.resolve(true)\n\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\n  onValidAddress = defaultValidAddressHandler,\n  onAddressClick,\n  ...props\n}) => {\n  const [state, setState] = useState(initialState)\n  const { t } = useTranslation()\n  const { isFetching, resultFound, value } = state\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value: newValue } = evt.target\n    setState((prevState) => ({\n      ...prevState,\n      value: newValue,\n    }))\n  }\n\n  const handleClick = () => {\n    setState(initialState)\n    onAddressClick(state.value)\n  }\n\n  // When we have a valid address fetch the data\n  useEffect(() => {\n    const isValidAddress = isAddress(value) !== false\n\n    const validAddressHandler = async () => {\n      try {\n        setState((prevState) => ({ ...prevState, isFetching: true }))\n        const hasResults = await onValidAddress(value)\n\n        setState((prevState) => ({\n          ...prevState,\n          isFetching: false,\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\n        }))\n      } catch {\n        setState((prevState) => ({ ...prevState, isFetching: false }))\n      }\n    }\n\n    if (isValidAddress) {\n      validAddressHandler()\n    } else {\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\n    }\n  }, [value, onValidAddress, setState])\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Input\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\n        value={state.value}\n        onChange={handleChange}\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\n      />\n      {isFetching && (\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\n          <CircleLoader />\n        </Box>\n      )}\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\n        {resultFound === ResultStatus.FOUND ? (\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\n        ) : (\n          <Text px=\"16px\" fontWeight=\"bold\">\n            {t('No results found.')}\n          </Text>\n        )}\n      </SubMenu>\n    </Box>\n  )\n}\n\nexport default AddressInputSelect\n","import React from 'react'\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\nimport useTheme from 'hooks/useTheme'\n\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\n  const { theme } = useTheme()\n  const background = theme.isDark\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\n  return <PageHeader background={background} {...props} />\n}\n\nexport default MarketPageHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\n\nexport interface StatBoxItemProps extends BoxProps {\n  title: string\n  stat: string\n}\n\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\n  <Box {...props}>\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\n      {title}\n    </Text>\n    {stat === null ? (\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\n    ) : (\n      <Text fontWeight=\"600\" textAlign=\"center\">\n        {stat}\n      </Text>\n    )}\n  </Box>\n)\n\nconst StatBox = styled(Flex)`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  justify-content: space-around;\n  padding: 8px;\n  width: 100%;\n`\n\nexport default StatBox\n","import styled from 'styled-components'\n\ninterface AvatarImageProps {\n  src: string\n  borderColor?: string\n  alt?: string\n}\n\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\n  alt,\n}))<AvatarImageProps>`\n  background: url('${({ src }) => src}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 96px;\n  height: 96px;\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n\nexport default AvatarImage\n","import { useEffect, useState } from 'react'\nimport { getCollectionDistributionApi, getNftsFromCollectionApi } from 'state/nftMarket/helpers'\nimport sum from 'lodash/sum'\nimport { ApiCollectionDistribution, ApiResponseCollectionTokens, ApiSingleTokenData } from 'state/nftMarket/types'\nimport { getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport { pancakeBunniesAddress } from '../constants'\n\ninterface State {\n  isFetching: boolean\n  data: ApiCollectionDistribution['data']\n}\n\nconst useGetCollectionDistribution = (collectionAddress: string) => {\n  const [state, setState] = useState<State>({ isFetching: false, data: null })\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      setState((prevState) => ({ ...prevState, isFetching: true }))\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistribution>(collectionAddress)\n      setState({\n        isFetching: false,\n        data: apiResponse.data,\n      })\n    }\n\n    fetchTokens()\n  }, [collectionAddress, setState])\n\n  return state\n}\n\ninterface StatePB {\n  isFetching: boolean\n  total: number\n  data: Record<string, ApiSingleTokenData & { tokenCount: number }>\n}\n\nexport const useGetCollectionDistributionPB = () => {\n  const [state, setState] = useState<StatePB>({ isFetching: false, total: 0, data: null })\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      setState((prevState) => ({ ...prevState, isFetching: true }))\n      let apiResponse: ApiResponseCollectionTokens\n      try {\n        apiResponse = await getNftsFromCollectionApi(pancakeBunniesAddress)\n      } catch (error) {\n        setState((prevState) => ({ ...prevState, isFetching: false }))\n        return\n      }\n      // Use on chain data to get most updated totalSupply and bunnyCount data. Nft Api Data not updated frequently.\n      const tokenIds = Object.keys(apiResponse.attributesDistribution)\n      const totalCountCall = {\n        address: getPancakeRabbitsAddress(),\n        name: 'totalSupply',\n      }\n      const bunnyCountCalls = tokenIds.map((tokenId) => ({\n        address: getPancakeRabbitsAddress(),\n        name: 'bunnyCount',\n        params: [tokenId],\n      }))\n      const bunnyContractCalls = [totalCountCall].concat(bunnyCountCalls)\n      try {\n        const response = await multicallv2(pancakeRabbitsAbi, bunnyContractCalls)\n        const tokenListResponse = response.slice(1).reduce((obj, tokenCount, index) => {\n          return {\n            ...obj,\n            [tokenIds[index]]: { ...apiResponse.data[index], tokenCount: tokenCount[0].toNumber() },\n          }\n        }, {})\n        setState({\n          isFetching: false,\n          total: response[0][0].toNumber(),\n          data: tokenListResponse,\n        })\n      } catch (error) {\n        // Use nft api data if on chain multicall fails\n        const total = sum(Object.values(apiResponse.attributesDistribution))\n        const tokenListResponse = Object.entries(apiResponse.data).reduce((obj, [tokenId, tokenData]) => {\n          return {\n            ...obj,\n            [tokenId]: { ...tokenData, tokenCount: apiResponse.attributesDistribution[tokenId] },\n          }\n        }, {})\n        setState({ isFetching: false, total, data: tokenListResponse })\n      }\n    }\n\n    fetchTokens()\n  }, [])\n\n  return state\n}\n\nexport default useGetCollectionDistribution\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport AddressInputSelect from 'components/AddressInputSelect'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst SearchBar: React.FC = (props) => {\n  const history = useHistory()\n\n  const handleAddressClick = (value: string) => {\n    history.push(`${nftsBaseUrl}/profile/${value}`)\n  }\n\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\n}\n\nexport default SearchBar\n","import React, { ReactNode } from 'react'\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\n\ninterface MarketPageTitleProps extends GridProps {\n  title: string\n  description?: ReactNode\n}\n\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\n    <Box>\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\n        {title}\n      </Heading>\n      {description}\n    </Box>\n    <Box>{children}</Box>\n  </Grid>\n)\n\nexport default MarketPageTitle\n","import { SubMenuItems } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseSubMenu = styled(SubMenuItems)`\n  background-color: transparent;\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\nexport default BaseSubMenu\n","var baseSum = require('./_baseSum'),\n    identity = require('./identity');\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nmodule.exports = sum;\n","import styled from 'styled-components'\n\ninterface StyledBannerImageProps {\n  src: string\n  alt?: string\n}\n\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\n  alt,\n}))<StyledBannerImageProps>`\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\n  background-image: url('${({ src }) => src}');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 100%;\n  border-radius: 32px;\n  height: 123px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 192px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 256px;\n  }\n`\n\nexport default StyledBannerImage\n","import React, { ReactNode } from 'react'\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\nimport BannerImage from './BannerImage'\n\ninterface BannerHeaderProps extends FlexProps {\n  bannerImage: string\n  bannerAlt?: string\n  avatar?: ReactNode\n}\n\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\n  return (\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\n      <Box position=\"relative\" pb=\"56px\">\n        <BannerImage src={bannerImage} alt={bannerAlt} />\n        <Box position=\"absolute\" bottom={0} left={-4}>\n          <Flex alignItems=\"flex-end\">\n            {avatar}\n            {children}\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default BannerHeader\n","import React from 'react'\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport SearchBar from '../components/SearchBar'\n\nconst BackLink = styled(RouterLink)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst TopBar: React.FC = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n      <BackLink to={`${nftsBaseUrl}/collections`}>\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\n        {t('All Collections')}\n      </BackLink>\n      <Box>\n        <SearchBar />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default TopBar\n","import React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\n\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\n  collectionAddress: string\n}\n\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\n      setLowestPrice(lowestCollectionPrice)\n    }\n\n    fetchLowestPrice()\n  }, [collectionAddress, setLowestPrice])\n\n  const formattedLowestPrice =\n    lowestPrice === null\n      ? null\n      : lowestPrice.toLocaleString(undefined, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })\n\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\n}\n\nexport default LowestPriceStatBoxItem\n","import React from 'react'\nimport { useLocation, useParams } from 'react-router'\nimport { Text } from '@pancakeswap/uikit'\nimport { Collection } from 'state/nftMarket/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport MarketPageTitle from '../components/MarketPageTitle'\nimport StatBox, { StatBoxItem } from '../components/StatBox'\nimport BannerHeader from '../components/BannerHeader'\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\nimport BaseSubMenu from '../components/BaseSubMenu'\nimport { nftsBaseUrl } from '../constants'\nimport TopBar from './TopBar'\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\n\ninterface HeaderProps {\n  collection: Collection\n}\n\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\n  const { t } = useTranslation()\n  const { pathname, hash } = useLocation()\n\n  const volume = totalVolumeBNB\n    ? parseFloat(totalVolumeBNB).toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })\n    : '0'\n\n  const itemsConfig = [\n    {\n      label: t('Items'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\n    },\n    {\n      label: t('Traits'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\n    },\n    {\n      label: t('Activity'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#activity`,\n    },\n  ]\n\n  return (\n    <>\n      <MarketPageHeader>\n        <TopBar />\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\n        <MarketPageTitle\n          title={collection.name}\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\n        >\n          <StatBox>\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\n            <StatBoxItem\n              title={t('Items listed')}\n              stat={numberTokensListed ? formatNumber(Number(numberTokensListed), 0, 0) : '0'}\n            />\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\n          </StatBox>\n        </MarketPageTitle>\n      </MarketPageHeader>\n      <Container>\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || '#items'}`} mt=\"24px\" mb=\"8px\" />\n      </Container>\n    </>\n  )\n}\n\nexport default Header\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n"],"sourceRoot":""}